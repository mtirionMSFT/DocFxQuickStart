### YamlMime:ManagedReference
items:
- uid: TocDocFxCreation.Domain.TocItem
  commentId: T:TocDocFxCreation.Domain.TocItem
  id: TocItem
  parent: TocDocFxCreation.Domain
  children:
  - TocDocFxCreation.Domain.TocItem.#ctor
  - TocDocFxCreation.Domain.TocItem.AddItem(TocDocFxCreation.Domain.TocItem,System.Boolean)
  - TocDocFxCreation.Domain.TocItem.Filename
  - TocDocFxCreation.Domain.TocItem.Href
  - TocDocFxCreation.Domain.TocItem.Items
  - TocDocFxCreation.Domain.TocItem.Sequence
  - TocDocFxCreation.Domain.TocItem.SortableTitle
  - TocDocFxCreation.Domain.TocItem.Title
  langs:
  - csharp
  - vb
  name: TocItem
  nameWithType: TocItem
  fullName: TocDocFxCreation.Domain.TocItem
  type: Class
  source:
    remote:
      path: QuickStart/src/TocDocFxCreation/Domain/TocItem.cs
      branch: master
      repo: https://github.com/mtirionMSFT/DocFxQuickStart.git
    id: TocItem
    path: src/TocDocFxCreation/Domain/TocItem.cs
    startLine: 13
  assemblies:
  - TocDocFxCreation
  namespace: TocDocFxCreation.Domain
  summary: "\nA TOC item.\n"
  example: []
  syntax:
    content: public class TocItem
    content.vb: Public Class TocItem
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TocDocFxCreation.Domain.TocItem.#ctor
  commentId: M:TocDocFxCreation.Domain.TocItem.#ctor
  id: '#ctor'
  parent: TocDocFxCreation.Domain.TocItem
  langs:
  - csharp
  - vb
  name: TocItem()
  nameWithType: TocItem.TocItem()
  fullName: TocDocFxCreation.Domain.TocItem.TocItem()
  type: Constructor
  source:
    remote:
      path: QuickStart/src/TocDocFxCreation/Domain/TocItem.cs
      branch: master
      repo: https://github.com/mtirionMSFT/DocFxQuickStart.git
    id: .ctor
    path: src/TocDocFxCreation/Domain/TocItem.cs
    startLine: 20
  assemblies:
  - TocDocFxCreation
  namespace: TocDocFxCreation.Domain
  summary: "\nInitializes a new instance of the <xref href=\"TocDocFxCreation.Domain.TocItem\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public TocItem()
    content.vb: Public Sub New
  overload: TocDocFxCreation.Domain.TocItem.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TocDocFxCreation.Domain.TocItem.Sequence
  commentId: P:TocDocFxCreation.Domain.TocItem.Sequence
  id: Sequence
  parent: TocDocFxCreation.Domain.TocItem
  langs:
  - csharp
  - vb
  name: Sequence
  nameWithType: TocItem.Sequence
  fullName: TocDocFxCreation.Domain.TocItem.Sequence
  type: Property
  source:
    remote:
      path: QuickStart/src/TocDocFxCreation/Domain/TocItem.cs
      branch: master
      repo: https://github.com/mtirionMSFT/DocFxQuickStart.git
    id: Sequence
    path: src/TocDocFxCreation/Domain/TocItem.cs
    startLine: 29
  assemblies:
  - TocDocFxCreation
  namespace: TocDocFxCreation.Domain
  summary: "\nGets or sets the sequence number for ordering with .order file.\nDefault is int.MaxValue, to make sure lower values are in front of the rest.\n"
  example: []
  syntax:
    content: public int Sequence { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Sequence As Integer
  overload: TocDocFxCreation.Domain.TocItem.Sequence*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TocDocFxCreation.Domain.TocItem.Filename
  commentId: P:TocDocFxCreation.Domain.TocItem.Filename
  id: Filename
  parent: TocDocFxCreation.Domain.TocItem
  langs:
  - csharp
  - vb
  name: Filename
  nameWithType: TocItem.Filename
  fullName: TocDocFxCreation.Domain.TocItem.Filename
  type: Property
  source:
    remote:
      path: QuickStart/src/TocDocFxCreation/Domain/TocItem.cs
      branch: master
      repo: https://github.com/mtirionMSFT/DocFxQuickStart.git
    id: Filename
    path: src/TocDocFxCreation/Domain/TocItem.cs
    startLine: 35
  assemblies:
  - TocDocFxCreation
  namespace: TocDocFxCreation.Domain
  summary: "\nGets or sets the file name.\nThis is just used for processing.\n"
  example: []
  syntax:
    content: public string Filename { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Filename As String
  overload: TocDocFxCreation.Domain.TocItem.Filename*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TocDocFxCreation.Domain.TocItem.SortableTitle
  commentId: P:TocDocFxCreation.Domain.TocItem.SortableTitle
  id: SortableTitle
  parent: TocDocFxCreation.Domain.TocItem
  langs:
  - csharp
  - vb
  name: SortableTitle
  nameWithType: TocItem.SortableTitle
  fullName: TocDocFxCreation.Domain.TocItem.SortableTitle
  type: Property
  source:
    remote:
      path: QuickStart/src/TocDocFxCreation/Domain/TocItem.cs
      branch: master
      repo: https://github.com/mtirionMSFT/DocFxQuickStart.git
    id: SortableTitle
    path: src/TocDocFxCreation/Domain/TocItem.cs
    startLine: 40
  assemblies:
  - TocDocFxCreation
  namespace: TocDocFxCreation.Domain
  summary: "\nGets or sets the sortable name of the item.\n"
  example: []
  syntax:
    content: public string SortableTitle { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SortableTitle As String
  overload: TocDocFxCreation.Domain.TocItem.SortableTitle*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TocDocFxCreation.Domain.TocItem.Title
  commentId: P:TocDocFxCreation.Domain.TocItem.Title
  id: Title
  parent: TocDocFxCreation.Domain.TocItem
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: TocItem.Title
  fullName: TocDocFxCreation.Domain.TocItem.Title
  type: Property
  source:
    remote:
      path: QuickStart/src/TocDocFxCreation/Domain/TocItem.cs
      branch: master
      repo: https://github.com/mtirionMSFT/DocFxQuickStart.git
    id: Title
    path: src/TocDocFxCreation/Domain/TocItem.cs
    startLine: 45
  assemblies:
  - TocDocFxCreation
  namespace: TocDocFxCreation.Domain
  summary: "\nGets or sets title of the item.\n"
  example: []
  syntax:
    content: public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Title As String
  overload: TocDocFxCreation.Domain.TocItem.Title*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TocDocFxCreation.Domain.TocItem.Href
  commentId: P:TocDocFxCreation.Domain.TocItem.Href
  id: Href
  parent: TocDocFxCreation.Domain.TocItem
  langs:
  - csharp
  - vb
  name: Href
  nameWithType: TocItem.Href
  fullName: TocDocFxCreation.Domain.TocItem.Href
  type: Property
  source:
    remote:
      path: QuickStart/src/TocDocFxCreation/Domain/TocItem.cs
      branch: master
      repo: https://github.com/mtirionMSFT/DocFxQuickStart.git
    id: Href
    path: src/TocDocFxCreation/Domain/TocItem.cs
    startLine: 50
  assemblies:
  - TocDocFxCreation
  namespace: TocDocFxCreation.Domain
  summary: "\nGets or sets link to the item.\n"
  example: []
  syntax:
    content: public string Href { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Href As String
  overload: TocDocFxCreation.Domain.TocItem.Href*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TocDocFxCreation.Domain.TocItem.Items
  commentId: P:TocDocFxCreation.Domain.TocItem.Items
  id: Items
  parent: TocDocFxCreation.Domain.TocItem
  langs:
  - csharp
  - vb
  name: Items
  nameWithType: TocItem.Items
  fullName: TocDocFxCreation.Domain.TocItem.Items
  type: Property
  source:
    remote:
      path: QuickStart/src/TocDocFxCreation/Domain/TocItem.cs
      branch: master
      repo: https://github.com/mtirionMSFT/DocFxQuickStart.git
    id: Items
    path: src/TocDocFxCreation/Domain/TocItem.cs
    startLine: 55
  assemblies:
  - TocDocFxCreation
  namespace: TocDocFxCreation.Domain
  summary: "\nGets or sets the items attached to this item (nodes).\n"
  example: []
  syntax:
    content: public ICollection<TocItem> Items { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{TocDocFxCreation.Domain.TocItem}
    content.vb: Public Property Items As ICollection(Of TocItem)
  overload: TocDocFxCreation.Domain.TocItem.Items*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TocDocFxCreation.Domain.TocItem.AddItem(TocDocFxCreation.Domain.TocItem,System.Boolean)
  commentId: M:TocDocFxCreation.Domain.TocItem.AddItem(TocDocFxCreation.Domain.TocItem,System.Boolean)
  id: AddItem(TocDocFxCreation.Domain.TocItem,System.Boolean)
  parent: TocDocFxCreation.Domain.TocItem
  langs:
  - csharp
  - vb
  name: AddItem(TocItem, Boolean)
  nameWithType: TocItem.AddItem(TocItem, Boolean)
  fullName: TocDocFxCreation.Domain.TocItem.AddItem(TocDocFxCreation.Domain.TocItem, System.Boolean)
  type: Method
  source:
    remote:
      path: QuickStart/src/TocDocFxCreation/Domain/TocItem.cs
      branch: master
      repo: https://github.com/mtirionMSFT/DocFxQuickStart.git
    id: AddItem
    path: src/TocDocFxCreation/Domain/TocItem.cs
    startLine: 67
  assemblies:
  - TocDocFxCreation
  namespace: TocDocFxCreation.Domain
  summary: "\nAdd an item.\n"
  example: []
  syntax:
    content: public void AddItem(TocItem item, bool insertTop = false)
    parameters:
    - id: item
      type: TocDocFxCreation.Domain.TocItem
      description: The item to add.
    - id: insertTop
      type: System.Boolean
      description: Insert at top of list.
    content.vb: Public Sub AddItem(item As TocItem, insertTop As Boolean = False)
  overload: TocDocFxCreation.Domain.TocItem.AddItem*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TocDocFxCreation.Domain
  commentId: N:TocDocFxCreation.Domain
  name: TocDocFxCreation.Domain
  nameWithType: TocDocFxCreation.Domain
  fullName: TocDocFxCreation.Domain
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TocDocFxCreation.Domain.TocItem
  commentId: T:TocDocFxCreation.Domain.TocItem
  parent: TocDocFxCreation.Domain
  name: TocItem
  nameWithType: TocItem
  fullName: TocDocFxCreation.Domain.TocItem
- uid: TocDocFxCreation.Domain.TocItem.#ctor*
  commentId: Overload:TocDocFxCreation.Domain.TocItem.#ctor
  name: TocItem
  nameWithType: TocItem.TocItem
  fullName: TocDocFxCreation.Domain.TocItem.TocItem
- uid: TocDocFxCreation.Domain.TocItem.Sequence*
  commentId: Overload:TocDocFxCreation.Domain.TocItem.Sequence
  name: Sequence
  nameWithType: TocItem.Sequence
  fullName: TocDocFxCreation.Domain.TocItem.Sequence
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TocDocFxCreation.Domain.TocItem.Filename*
  commentId: Overload:TocDocFxCreation.Domain.TocItem.Filename
  name: Filename
  nameWithType: TocItem.Filename
  fullName: TocDocFxCreation.Domain.TocItem.Filename
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TocDocFxCreation.Domain.TocItem.SortableTitle*
  commentId: Overload:TocDocFxCreation.Domain.TocItem.SortableTitle
  name: SortableTitle
  nameWithType: TocItem.SortableTitle
  fullName: TocDocFxCreation.Domain.TocItem.SortableTitle
- uid: TocDocFxCreation.Domain.TocItem.Title*
  commentId: Overload:TocDocFxCreation.Domain.TocItem.Title
  name: Title
  nameWithType: TocItem.Title
  fullName: TocDocFxCreation.Domain.TocItem.Title
- uid: TocDocFxCreation.Domain.TocItem.Href*
  commentId: Overload:TocDocFxCreation.Domain.TocItem.Href
  name: Href
  nameWithType: TocItem.Href
  fullName: TocDocFxCreation.Domain.TocItem.Href
- uid: TocDocFxCreation.Domain.TocItem.Items*
  commentId: Overload:TocDocFxCreation.Domain.TocItem.Items
  name: Items
  nameWithType: TocItem.Items
  fullName: TocDocFxCreation.Domain.TocItem.Items
- uid: System.Collections.Generic.ICollection{TocDocFxCreation.Domain.TocItem}
  commentId: T:System.Collections.Generic.ICollection{TocDocFxCreation.Domain.TocItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<TocItem>
  nameWithType: ICollection<TocItem>
  fullName: System.Collections.Generic.ICollection<TocDocFxCreation.Domain.TocItem>
  nameWithType.vb: ICollection(Of TocItem)
  fullName.vb: System.Collections.Generic.ICollection(Of TocDocFxCreation.Domain.TocItem)
  name.vb: ICollection(Of TocItem)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TocDocFxCreation.Domain.TocItem
    name: TocItem
    nameWithType: TocItem
    fullName: TocDocFxCreation.Domain.TocItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TocDocFxCreation.Domain.TocItem
    name: TocItem
    nameWithType: TocItem
    fullName: TocDocFxCreation.Domain.TocItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TocDocFxCreation.Domain.TocItem.AddItem*
  commentId: Overload:TocDocFxCreation.Domain.TocItem.AddItem
  name: AddItem
  nameWithType: TocItem.AddItem
  fullName: TocDocFxCreation.Domain.TocItem.AddItem
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
